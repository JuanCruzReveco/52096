// Generated from d:/51964/antlr-function/Function.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,15,97,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,5,1,5,5,5,60,8,5,
10,5,12,5,63,9,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,4,11,76,
8,11,11,11,12,11,77,1,12,1,12,5,12,82,8,12,10,12,12,12,85,9,12,1,12,1,12,
1,13,1,13,1,14,4,14,92,8,14,11,14,12,14,93,1,14,1,14,0,0,15,1,1,3,2,5,3,
7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,1,0,5,3,
0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,2,0,34,34,92,
92,3,0,9,10,13,13,32,32,100,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,
0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,
1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,
1,31,1,0,0,0,3,33,1,0,0,0,5,35,1,0,0,0,7,43,1,0,0,0,9,52,1,0,0,0,11,57,1,
0,0,0,13,64,1,0,0,0,15,66,1,0,0,0,17,68,1,0,0,0,19,70,1,0,0,0,21,72,1,0,
0,0,23,75,1,0,0,0,25,79,1,0,0,0,27,88,1,0,0,0,29,91,1,0,0,0,31,32,5,44,0,
0,32,2,1,0,0,0,33,34,5,43,0,0,34,4,1,0,0,0,35,36,5,102,0,0,36,37,5,117,0,
0,37,38,5,110,0,0,38,39,5,99,0,0,39,40,5,105,0,0,40,41,5,111,0,0,41,42,5,
110,0,0,42,6,1,0,0,0,43,44,5,101,0,0,44,45,5,115,0,0,45,46,5,99,0,0,46,47,
5,114,0,0,47,48,5,105,0,0,48,49,5,98,0,0,49,50,5,105,0,0,50,51,5,114,0,0,
51,8,1,0,0,0,52,53,5,108,0,0,53,54,5,101,0,0,54,55,5,101,0,0,55,56,5,114,
0,0,56,10,1,0,0,0,57,61,7,0,0,0,58,60,7,1,0,0,59,58,1,0,0,0,60,63,1,0,0,
0,61,59,1,0,0,0,61,62,1,0,0,0,62,12,1,0,0,0,63,61,1,0,0,0,64,65,5,40,0,0,
65,14,1,0,0,0,66,67,5,41,0,0,67,16,1,0,0,0,68,69,5,123,0,0,69,18,1,0,0,0,
70,71,5,125,0,0,71,20,1,0,0,0,72,73,5,59,0,0,73,22,1,0,0,0,74,76,7,2,0,0,
75,74,1,0,0,0,76,77,1,0,0,0,77,75,1,0,0,0,77,78,1,0,0,0,78,24,1,0,0,0,79,
83,5,34,0,0,80,82,8,3,0,0,81,80,1,0,0,0,82,85,1,0,0,0,83,81,1,0,0,0,83,84,
1,0,0,0,84,86,1,0,0,0,85,83,1,0,0,0,86,87,5,34,0,0,87,26,1,0,0,0,88,89,5,
61,0,0,89,28,1,0,0,0,90,92,7,4,0,0,91,90,1,0,0,0,92,93,1,0,0,0,93,91,1,0,
0,0,93,94,1,0,0,0,94,95,1,0,0,0,95,96,6,14,0,0,96,30,1,0,0,0,5,0,61,77,83,
93,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class FunctionLexer extends antlr4.Lexer {

    static grammarFileName = "Function.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "','", "'+'", "'funcion'", "'escribir'", 
                         "'leer'", null, "'('", "')'", "'{'", "'}'", "';'", 
                         null, null, "'='" ];
	static symbolicNames = [ null, null, null, "FUNCTION", "ESCRIBIR", "LEER", 
                          "PALABRAS", "APAR", "CPAR", "ALLAVE", "CLLAVE", 
                          "PUNCOM", "NUMERO", "CADENA", "EQ", "WS" ];
	static ruleNames = [ "T__0", "T__1", "FUNCTION", "ESCRIBIR", "LEER", "PALABRAS", 
                      "APAR", "CPAR", "ALLAVE", "CLLAVE", "PUNCOM", "NUMERO", 
                      "CADENA", "EQ", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

FunctionLexer.EOF = antlr4.Token.EOF;
FunctionLexer.T__0 = 1;
FunctionLexer.T__1 = 2;
FunctionLexer.FUNCTION = 3;
FunctionLexer.ESCRIBIR = 4;
FunctionLexer.LEER = 5;
FunctionLexer.PALABRAS = 6;
FunctionLexer.APAR = 7;
FunctionLexer.CPAR = 8;
FunctionLexer.ALLAVE = 9;
FunctionLexer.CLLAVE = 10;
FunctionLexer.PUNCOM = 11;
FunctionLexer.NUMERO = 12;
FunctionLexer.CADENA = 13;
FunctionLexer.EQ = 14;
FunctionLexer.WS = 15;



